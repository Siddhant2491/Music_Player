(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const g of a.addedNodes)g.tagName==="LINK"&&g.rel==="modulepreload"&&o(g)}).observe(document,{childList:!0,subtree:!0});function t(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(s){if(s.ep)return;s.ep=!0;const a=t(s);fetch(s.href,a)}})();console.log("Let start");let n=new Audio,l=[],c=[],f=!1,i=0;async function m(){try{let e=await fetch("/songs.json");if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return c=await e.json(),console.log("Loaded songs:",c.length),c}catch(e){return console.error("Error loading songs.json:",e),[]}}async function p(e){c.length===0&&await m(),e==="all"?l=[...c]:l=c.filter(t=>{const o=t.path.split("/");return o[o.length-2]===e}),console.log(`Found ${l.length} songs for folder: ${e}`);let r=document.querySelector(".lib").getElementsByTagName("ul")[0];r.innerHTML="";for(let t=0;t<l.length;t++){const o=l[t];r.innerHTML+=`<li data-index="${t}">
                        <div class = "flex-c"
                            <div class="sname">    
                                <img src="/assets/images/music.svg" alt="">
                                <div class="songInfo">
                                    <p class="songName">${o.title}</p>
                                </div>
                            </div>
                        </div>
                            <div class="duration">${u(o.duration)}</div>
                            <img class="pp" src="/assets/images/play.svg" alt="">
                        </li>`}Array.from(document.querySelector(".lib").getElementsByTagName("li")).forEach(t=>{t.addEventListener("click",()=>{const o=parseInt(t.getAttribute("data-index"));i=o,d(l[o])})})}function u(e){if(typeof e!="number"||isNaN(e))return"0:00";const r=Math.round(e),t=Math.floor(r/60),o=r%60;return`${t}:${o.toString().padStart(2,"0")}`}function y(){n.onended=()=>{f&&i<l.length-1?(i++,d(l[i])):play.src="/assets/images/play.svg"}}const d=(e,r=!1)=>{e&&(n.src=e.path,n.loop=!1,y(),r||(n.play(),n.paused||(play.src="/assets/images/pause.svg")),document.querySelector(".disName").innerHTML=e.title,document.querySelector(".time").innerHTML="00:00 / "+u(e.duration))};async function v(){c.length===0&&await m();const e=new Map;c.forEach(t=>{const o=t.path.split("/"),s=o[o.length-2];e.has(s)||e.set(s,{folder:s,songs:[]}),e.get(s).songs.push(t)});const r=document.querySelector(".cards");r.innerHTML="";for(const[t,o]of e)try{const s=await fetch(`/songs/${t}/info.json`);let a={title:t,discription:`${t} Collection`};s.ok?a=await s.json():console.warn(`Could not fetch info.json for folder: ${t}`),r.innerHTML+=`
                <div data-folder="${t}" class="card">
                    <img src="/songs/${t}/cover.jpg" alt="COVER" onerror="this.src='/assets/images/default-cover.jpg'">
                    <h3>${a.title}</h3>
                    <p>${a.discription}</p>
                    <span class="songCount">${o.songs.length} songs</span>
                </div>`}catch(s){console.error(`Error loading metadata for folder ${t}:`,s),r.innerHTML+=`
                <div data-folder="${t}" class="card">
                    <img src="/songs/${t}/cover.jpg" alt="COVER" onerror="this.src='/assets/images/default-cover.jpg'">
                    <h3>${t}</h3>
                    <p>${t} Collection</p>
                    <span class="songCount">${o.songs.length} songs</span>
                </div>`}}async function h(){if(await m(),c.length>0){const e=c[0].path.split("/"),r=e[e.length-2];await p(r),l.length>0&&(i=0,d(l[0],!0))}await v(),Array.from(document.getElementsByClassName("card")).forEach(e=>{e.addEventListener("click",async r=>{const t=r.currentTarget.dataset.folder;await p(t),l.length>0&&(i=0)})}),play.addEventListener("click",()=>{n.paused?(n.play(),play.src="/assets/images/pause.svg"):(n.pause(),play.src="/assets/images/play.svg")}),document.addEventListener("keydown",e=>{e.code==="Space"&&(e.preventDefault(),n.paused?(n.play(),play.src="/assets/images/pause.svg"):(n.pause(),play.src="/assets/images/play.svg"))}),prev.addEventListener("click",()=>{i>0?(i--,d(l[i])):n.currentTime=0}),next.addEventListener("click",()=>{i<l.length-1&&(i++,d(l[i]))}),replay.addEventListener("click",()=>{n.currentTime=0}),n.addEventListener("timeupdate",()=>{const e=u(n.currentTime),r=u(n.duration);document.querySelector(".time").innerHTML=e+" / "+r,n.duration&&(document.querySelector(".circle").style.left=n.currentTime/n.duration*99+"%")}),document.querySelector(".seekBar").addEventListener("click",e=>{let r=e.offsetX/e.target.getBoundingClientRect().width*100;document.querySelector(".circle").style.left=r+"%",n.duration&&(n.currentTime=n.duration*r/100)}),document.querySelector(".vol").getElementsByTagName("input")[0].addEventListener("change",e=>{n.volume=parseInt(e.target.value)/100}),mute.addEventListener("click",()=>{let e=document.querySelector(".vol").getElementsByTagName("input")[0];n.volume==0?(n.volume=.1,e.value=10,mute.src="/assets/images/volume.svg"):(n.volume=0,e.value=0,mute.src="/assets/images/mute.svg")}),ham.addEventListener("click",()=>{document.querySelector(".left").style.left=0}),clo.addEventListener("click",()=>{document.querySelector(".left").style.left="-100%"}),toggle.addEventListener("click",()=>{toggle.src.includes("autoplay.svg")&&!toggle.src.includes("autoplayoff")?(toggle.src="/assets/images/autoplayoff.svg",f=!1):(toggle.src="/assets/images/autoplay.svg",f=!0)})}h();
